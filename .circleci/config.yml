version: 2

defaults: &defaults
  docker:
    # Use a Docker image with Cypress already installed.
    - image: cypress/base:10
  working_directory: ~/react-axe

jobs:
  # Fetch and cache dependencies.
  dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-cache-{{ checksum "package-lock.json" }
      - restore_cache:
          keys:
            - v2-example-cache-{{ checksum "example/package.json" }}
      # Install package dependencies.
      - run: npm install
      # Install example dependencies; they're used in tests.
      - run: npm install --prefix example
      - save_cache:
          key: v2-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - example/node_modules
            - ~/.cache
      - save_cache:
          key: v2-cache-example-{{ checksum "package-lock.json" }}
          paths:
            - example/node_modules

  # Run the test suite.
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-cache-{{ checksum "package-lock.json" }}
      - restore_cache:
          keys:
            - v2-cache-example-{{ checksum "package-lock.json" }}
      - run: npm run test

  # Release a new version.
  release:
    <<: *defaults
    steps:
      - checkout
      - run: npm config set "//registry.npmjs.org/:_authToken" $NPM_AUTH
      - restore_cache:
          keys:
            - v2-cache-{{ checksum "package-lock.json" }}
      - run: npm publish
  github_release:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: go get gopkg.in/aktau/github-release.v0
      - run:
          name: Download and run GitHub release script
          command: |
            curl https://raw.githubusercontent.com/dequelabs/attest-release-scripts/develop/src/node-github-release.sh -s -o ./node-github-release.sh
            chmod +x ./node-github-release.sh
            ./node-github-release.sh

workflows:
  version: 2
  build:
    jobs:
      - dependencies
      # Run tests on all commits, but after installing dependencies.
      - test:
          requires:
            - dependencies
      # Run a production release on "master" commits, but only after the tests pass and dependencies are installed.
      - release:
          requires:
            - dependencies
            - test
          filters:
            branches:
              only: master
      - github_release:
          requires:
            - release
